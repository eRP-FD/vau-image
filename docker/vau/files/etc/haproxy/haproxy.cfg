global
  user haproxy
  group erp-processing-context
  log /dev/log local0
  log /dev/log local1 notice
  daemon
  external-check
  insecure-fork-wanted

defaults
  log global
  option log-health-checks
  mode tcp
  option tcplog
  option dontlognull
  timeout connect "$TIMEOUT_CONNECT"
  timeout client  "$TIMEOUT_CLIENT"
  timeout server  "$TIMEOUT_SERVER"

frontend fe_redis
  bind ${REDIS_FRONTEND_IP}:${REDIS_FRONTEND_PORT} name redis
  mode tcp
  option tcplog
  default_backend be_redis

frontend fe_postgres
  bind ${POSTGRES_FRONTEND_IP}:${POSTGRES_FRONTEND_PORT} name postgres
  default_backend be_postgres

backend be_redis
  mode tcp
  option external-check
  external-check path "/bin:/usr/bin:/usr/local/bin"
  external-check command /usr/local/bin/redis-healthcheck.sh

  server redis-node1 ${REDIS_NODE1_IP}:${REDIS_NODE1_BACKEND_PORT} check fall 2 rise 1 inter 2s on-marked-down shutdown-sessions
  server redis-node2 ${REDIS_NODE2_IP}:${REDIS_NODE2_BACKEND_PORT} check fall 2 rise 1 inter 2s on-marked-down shutdown-sessions
  server redis-node3 ${REDIS_NODE3_IP}:${REDIS_NODE3_BACKEND_PORT} check fall 2 rise 1 inter 2s on-marked-down shutdown-sessions
  server redis-node4 ${REDIS_NODE4_IP}:${REDIS_NODE4_BACKEND_PORT} check fall 2 rise 1 inter 2s on-marked-down shutdown-sessions

backend be_postgres
  balance first
  mode tcp
  server postgres-node1 ${POSTGRES_NODE1_IP}:${POSTGRES_NODE1_BACKEND_PORT} id 1 check
  server postgres-node2 ${POSTGRES_NODE2_IP}:${POSTGRES_NODE2_BACKEND_PORT} id 2 check
